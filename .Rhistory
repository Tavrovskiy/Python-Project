country <- select(gdp.change,name,ISO3)
# now combine two data frames to get a complete data frame "difference" with countries, codes, percentage change in GDP each year
difference <- cbind(country, difference)
# convert world.bank to wide data frame by Series.code
world.bank <- spread(world.bank, key = Series.Name, value = Series.Code)
p1 <- plot_geo(world.group) %>%
add_trace(
z = ~GDP, color = ~GDP, colors = 'Blues',
text = ~name, locations = ~ISO3, marker = list(line = l)
) %>%
colorbar(title = 'Year', tickprefix = 'X') %>%
layout(
title = 'GDP Change Under Climate Change',
geo = g
)
world.map <- map_data("world")
world.map <- map_data("world") %>% mutate(ISO3)
ISO3 <- iso.alpha(world.map$region, n = 3)
world.map <- map_data("world") %>% mutate(ISO3)
world.group <- gather(select.difference,
key = year,
value = GDP,
X2011,
X2031,
X2051,
X2071,
X2091,
X2099)
world.map <- map_data("world")
# fix the country names, mutate ISO3 code to each country row:
ISO3 <- iso.alpha(world.map$region, n = 3)
# mutate ISO3 Code to the world.map
world.map <- map_data("world") %>% mutate(ISO3)
# join the "world.map" with "difference"
world.difference <- full_join(world.map, difference)
# by 20 years of interest, select 2010 - 2099 data
select.difference <- select(world.difference, name, ISO3, long, lat, group, order,  X2011,X2031,X2051,X2071,X2091,X2099)
# in order to facet the data by years, we need to gather the data frame
world.group <- gather(select.difference,
key = year,
value = GDP,
X2011,
X2031,
X2051,
X2071,
X2091,
X2099)
# cut the data frame, break GDP change data into 5 levels from mild to drastic change
world.factor <- cut(world.group$GDP, breaks = 5, label =c("stable","mild","medium","high","drastic"))
# Let's Get the World Map working
ggplot(data = world.group) + geom_polygon(aes(x = long, y = lat, group = group, fill = world.factor)) + coord_quickmap() + labs(x = "longtitude", y = "latitude") + facet_wrap(~year) + scale_fill_brewer(palette = "Reds") + ggtitle("GDP Change Under Climate Change, 20 years of Interest") + theme(panel.background = element_rect(fill = 'green'))
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
View(survey)
colnames(survey)
colnames(survey) <- gsub("."," ", colnames(survey))
colnames(survey)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
?gsub
gsub
colnames(survey) <- gsub(colnames(survey), ".", " ")
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
survey
View(survey)
colnames(survey) <- gsub(".", " ", colnames(survey), fixed = T)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience)
library(knitr )
library("knitr")
library("ggplot2")
library("dplyr")
library("tidyr")
library("maps")
library("ggvis")
library("plotly")
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience)
View(prog)
View(survey)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System)
colnames(prog) <- gsub(".", " ", colnames(survey), fixed = T)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System)
colnames(prog) <- gsub(".", " ", colnames(survey), fixed = T)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System)
colnames(prog) <- gsub(".", " ", colnames(survey), fixed = T)
colnames(prog) <- gsub(".", " ", colnames(prog), fixed = T)
survey <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System,Cups.of.Coffee)
colnames(prog) <- gsub(".", " ", colnames(prog), fixed = T)
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`), color = 'red')
ggplot(data = cups) + geom_abline(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`), color = 'red')
ggplot(data = cups) + geom_abline(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "bin", position = "stack")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "bin")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`),stat = "bin")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`),stat = "sum")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`),stat = "count")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`),stat = "bin")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`,y = `Cups of Coffee`))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`,y = `Cups of Coffee`), stat = "bin")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`,y = `Cups of Coffee`), stat = "count")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`,y = `Cups of Coffee`))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`,y = `Cups of Coffee`), stat = "bin")
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`))
hist(cups)
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`))
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`))
as.factor(prog$`Programming Experience`)
levels(prog$`Programming Experience`)
prog$`Programming Experience` %>% is.factor()
as.factor(prog$`Programming Experience`)
levels(prog$`Programming Experience`)
levels(as.factor(prog$`Programming Experience`))
level <- levels(as.factor(prog$`Programming Experience`))
ggplot(data = cups) + geom_count(mapping = aes(x = level, y = `Cups of Coffee`))
as.vector(level)
levels(as.factor(prog$`Programming Experience`))[levels(as.factor(prog$`Programming Experience`))=="I have lots of experience with a programming language (e.g., CSE143+)"] <- "Advanced"
Programming
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
levels(as.factor(prog$`Programming Experience`)) <- c("Advanced","Medium","Basis","None")
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
level <- levels(as.factor(prog$`Programming Experience`))
leve
level
levels(as.factor(prog$`Programming Experience`)) <- c("Advanced","Medium","Basis","None")
level <- levels(as.factor(prog$`Programming Experience`))
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`))
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, stat = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, count = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_histogram(mapping = aes(x = `Programming Experience`, count = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
?geom_histogram
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))+geom_bar
ggplot(data = cups) + geom_count(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))+geom_bar()
ggplot(data = cups) + geom_bar(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + geom_bar() + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, ) + geom_bar(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, ) + geom_bar(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, ) + geom_bar(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "identity") + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
View(cups)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System,Cups.of.Coffee)
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System,Cups.of.Coffee)
colnames(prog) <- gsub(".", " ", colnames(prog), fixed = T)
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
ggplot(data = cups, ) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "identity") + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
ggplot(data = cups, ) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "identity") + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, ) + geom_smooth(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`),stat = "identity") + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups, ) + geom_smooth(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_smooth(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None")) + scale_x_reverse()
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None")) + scale_x_reverse()
ggplot(data = cups) + geom_point(mapping = aes(y = `Programming Experience`, x = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None")) + scale_x_reverse()
ggplot(data = cups) + geom_smooth(mapping = aes(y = `Programming Experience`, x = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None")) + scale_x_reverse()
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`), color = `Programming Experience`) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`, color = `Programming Experience`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
# scan the survey dataset
data <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
# select the desired information
prog <- survey %>% select(Programming.Experience,R.Language.Experience,Web.Programming.Experience,Version.Control.Experience,Command.Line.Experience,Markdown.Experience,Operating.System,Cups.of.Coffee)
# rename the dataset
colnames(prog) <- gsub(".", " ", colnames(prog), fixed = T)
# analyze the cups of coffee consumed by those with simple,moderate,lots of programming experiences
cups <- prog %>% select(`Programming Experience`,`Cups of Coffee`)
ggplot(data = cups) + geom_point(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
# scan the survey dataset
data <- read.csv("data/intro-survey.csv", stringsAsFactors = F)
quantified.data <- data
quantified.data <- sapply(quantified.data,gsub,pattern="Never used it",replacement=0) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="Used it a few times",replacement=1) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="Intermediate user",replacement=2) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="Expert user",replacement=3) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="I've never written code",replacement=0) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="I've experimented with simple programming",replacement=1) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="I have lots of experience with a programming language (e.g., CSE143+)",replacement=3,fixed=TRUE) %>%
as.data.frame()
quantified.data <- sapply(quantified.data,gsub,pattern="I have moderate experience with a programming language (e.g., CSE132)",replacement=2,fixed=TRUE) %>%
as.data.frame()
quantified.data[ ,1] <- as.character(quantified.data[ ,1]) %>%  as.numeric
quantified.data[ ,2] <- as.character(quantified.data[ ,2]) %>%  as.numeric
quantified.data[ ,3] <- as.character(quantified.data[ ,3]) %>%  as.numeric
quantified.data[ ,4] <- as.character(quantified.data[ ,4]) %>%  as.numeric
quantified.data[ ,5] <- as.character(quantified.data[ ,5]) %>%  as.numeric
quantified.data[ ,6] <- as.character(quantified.data[ ,6]) %>%  as.numeric
quantified.data[ ,9] <- as.character(quantified.data[ ,9]) %>%  as.numeric
quantified.data <- mutate(quantified.data, Experience = Programming.Experience  +
Command.Line.Experience +
Version.Control.Experience +
Markdown.Experience +
R.Language.Experience +
Web.Programming.Experience)
quantified.data$Level <- NA
quantified.data[quantified.data$Experience >= 10, ]$Level <- "Strong"
quantified.data[quantified.data$Experience >= 5 & quantified.data$Experience < 10, ]$Level <- "Mid"
quantified.data[quantified.data$Experience < 5, ]$Level <- "Weak"
quantified.data$Level = factor(quantified.data$Level, levels=c('Weak','Mid','Strong'))
data$Level <- quantified.data$Level
View(quantified.data)
cup <- quantified.data %>% select(level,Cups.of.Coffee)
cup <- quantified.data %>% select(Level,Cups.of.Coffee)
cup <- quantified.data %>% select(Experience,Cups.of.Coffee)
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffe))
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee))
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Advanced","Medium","Basis","None"))
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
ggplot(cup) + geom_line(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
smooth
cup <- quantified.data %>% select(Experience,Cups.of.Coffee)
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
ggplot(data = cups) + geom_line(mapping = aes(x = `Programming Experience`, y = `Cups of Coffee`)) + scale_x_discrete(labels= c("Advanced","Medium","Basis","None"))
cup <- quantified.data %>% select(Experience,Cups.of.Coffee,Command.Line.Experience)
cup <- quantified.data %>% select(Experience,Cups.of.Coffee,Command.Line.Experience)
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p1 <- ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p1 <- ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
ggplot(cup) + geom_smooth(mapping = aes(x = Programming.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2 <- ggplot(cup) + geom_smooth(mapping = aes(x = Command.Line.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2 <- ggplot(cup) + geom_smooth(mapping = aes(x = Command.Line.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2
p2 <- ggplot(cup) + geom_line(mapping = aes(x = Command.Line.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2
p2 <- ggplot(cup) + geom_bar(mapping = aes(x = Command.Line.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2
p2 <- ggplot(cup) + geom_smooth(mapping = aes(x = Command.Line.Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p2
p1 <- ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
p1 +p2
p1 <- ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced"))
quantified.data[1:5]
View(quantified.data[1:5])
ggplot(prog) + geom_line(mapping = aes(x = Programming.Experience))
prog <- quantified.data[1:6]x
prog <- quantified.data[1:6]
prog <- quantified.data[1:6] %>% mutate(quantified.data,Level)
prog <- quantified.data %>% select(Level, Programming.Experience, Command.Line.Experience, Version.Control.Experience, Markdown.Experience, R.Language.Experience, Web.Programming.Experience, Operating.System)
ggplot(prog) + geom_smooth(mapping = aes(x = Level, y = Programming.Experience))
strong <- prog %>% filter(Level == "strong")
View(strong)
strong <- prog %>% filter(Level == "Strong")
ggplot(cup) + geom_smooth(mapping = aes(x = Experience, y = Cups.of.Coffee)) + scale_x_continuous(labels= c("Low","Basic","Medium","Advanced")) + ggtitle("Programming Experience Vs. Cups of Coffee Consumed")
ggplot(data = prog) +
geom_bar(aes(x = 1, fill = Level), position = "fill") +
coord_polar(theta = "y")
ggplot(data = prog) +
geom_bar(aes(x = Programming.Experience, fill = Level), position = "fill") +
coord_polar(theta = "y")
ggplot(data = prog) +
geom_bar(aes(x = 1, fill = Level), position = "fill") +
coord_polar(theta = "y")
strong <- prog %>% filter(Level == "Strong")
ggplot(data = strong) +
geom_bar(aes(x = 1), position = "fill") +
coord_polar(theta = "y") + facet_wrap(~Level)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = Level), position = "fill") +
coord_polar(theta = "y")
strong <- prog %>% filter(Level == "Strong") %m%
gather(key = Experience, value = Type, Programming.Experience, Command.Line.Experience,
Version.Control.Experience, Markdown.Experience, R.Language.Experience, Web.Programming.Experience)
strong <- prog %>% filter(Level == "Strong") %>%
gather(key = Experience, value = Type, Programming.Experience, Command.Line.Experience,
Version.Control.Experience, Markdown.Experience, R.Language.Experience, Web.Programming.Experience)
strong <- prog %>% filter(Level == "Strong") %>%
gather(key = Experience, value = value, Programming.Experience, Command.Line.Experience,
Version.Control.Experience, Markdown.Experience, R.Language.Experience, Web.Programming.Experience)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = Level), position = "fill") +
coord_polar(theta = "y")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = Experience), position = "fill") +
coord_polar(theta = "y")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = value), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,1,2,3))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9, 3))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
level <- cut(strong$value, breaks = 4, label =c("stable","mild","medium","high","drastic"))
level <- cut(strong$value, breaks = 4, label = c("low","basic","medium","high")))
level <- cut(strong$value, breaks = 4, label = c("low","basic","medium","high"))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = level, position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = level, position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
level <- cut(strong$value, c(-1,0.9,1.9,2.9,3))), label =c("stable","mild","medium","high","drastic"))
level <- cut(strong$value, breaks = c(-1,0.9,1.9,2.9,3))), label =c("stable","mild","medium","high","drastic"))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience)
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guide(fill = guide_legend(title = "Proficiency"))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency"))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency"))
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) +  theme(panel.background = element_rect(fill = 'green')
ggplot(data = strong) +
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + labels(x = "Programming Languages")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + labs(x = "Programming Languages")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + labs(y = "Programming Languages")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(y = "Programming Languages")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "Reds")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "blue")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "orange")
ggplot(data = strong) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "Reds")
weak <- prog %>% filter(Level == "Weak") %>%
gather(key = Experience, value = value, Programming.Experience, Command.Line.Experience,
Version.Control.Experience, Markdown.Experience, R.Language.Experience, Web.Programming.Experience)
View(weak)
ggplot(data = weak) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "Reds")
ggplot(data = weak) +
geom_bar(aes(x = 1, fill = cut(value, c(-1,0.9,1.9,2.9,3), label = c("low","basic","medium","high"))), position = "fill") +
coord_polar(theta = "y") +
facet_wrap(~Experience) + guides(fill = guide_legend(title = "Proficiency")) + scale_x_reverse() +
labs(x = "Programming Languages") + scale_fill_brewer(palette = "Greens")
shiny::runApp('code/a8-data-app-tufangxu')
ggplot(iris) + geom_point(aes(mapping = aes(x = Sepal.Width,y = Sepal.Length)))
ggplot(iris) + geom_point(aes(mapping = aes(y = Sepal.Length)))
ggplot(iris) + geom_boxplot(aes(mapping = aes(x = Species,y = Sepal.Length, color = Species)))
hist(iris)
hist(iris$Sepal.Length)
?plotly
library(plotly)
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
ggplot(mtcars2, aes(wt, mpg)) + geom_point()
ggplot(mtcars, aes(wt, mpg)) + geom_point()
View(mtcars)
ggplot(iris, aes(Sepal.Width, Sepal.Length)) + geom_point()
ggplot(iris, aes(Sepal.Width, Petal.Width)) + geom_point()
ggplot(iris, aes(Species, Petal.Width)) + geom_boxplot()
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
ggplot(iris, aes(Species, Petal.Width)) + geom_boxplot()
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
shiny::runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
iris$Species
as.level(iris$Species)
levels(iris$Species)
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
runApp('code/a8-data-app-tufangxu')
library(shiny); runApp('code/info201-ab2-Final_Project/tufang-xu.R')
runApp('code/a8-data-app-tufangxu')
runApp('code/info201-ab2-Final_Project/tufang-xu.R')
runApp('code/final1/info201-ab2-Final_Project')
setwd("~/Desktop/Python-Project")
